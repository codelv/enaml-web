from web.components.api import *
from web.core.api import Block, Looper, Conditional
from views.base import Page
from views.forms import AutoForm
from views.blocks import OneColRow, TwoColRow, Card, Icon
from models import Company, Employee

enamldef EmployeeTable(Card): card:
    attr company: Company
    attr selected = 0
    Block:
        block = card.content
        Conditional:
            #: When all are removed
            condition << not bool(company.employees)
            H3:
                text = 'No employees, what are you doing here?'
                    
        Conditional:
            condition << bool(company.employees)
            
            P:
                text << "Employees {}".format(len(company.employees))
            
            Table:
                attr items << company.employees
                attr columns = items[0].members().keys() if items else []
                tag = 'table'
                cls = 'highlight responsive-table'
                THead:
                    Tr:
                        Th:
                            Input:
                                type = 'checkbox'
                        Looper:
                            iterable << columns
                            Th:
                                text = loop_item.replace("_"," ").title()
                        Th:
                            text = 'Actions'
                TBody:
                    attr results << items
                    Looper:
                        iterable << results
                        Tr:
                            attr item << loop_item
                            Td:
                                Input:
                                    type = 'checkbox'
                            Looper:
                                iterable << columns
                                Td:
                                    text << "{}".format(getattr(item,loop_item))
                            Td:
                                A:
                                    #href << "edit/{}/".format(index)
                                    Icon:
                                        text = "edit" 
    Block:
        block = card.actions
        A:
            text = "Add"
            attrs = {'data-onclick':'1'} # Currently required to handle clicks
            on_click :: 
                print "clicked"
                company.employees.append(Employee())
                card.selected = len(company.employees)-1
                
    
enamldef EmployeeForm(Card): card:
    #: Only allow employee types
    attr employee: Employee
    Block:
        block = card.content
        Conditional:
            condition << employee is None
            H3:
                text = "No employee is selected to edit"
        Conditional:
            condition << bool(employee)
            AutoForm:
                model << employee
        

enamldef HelpCard(Card): card:
    Block:
        block = card.content
        P:
            text = "Do it"

enamldef View(Page): page:
    #: Page showing a table of employees in the company
    #: with a form to edit one
    #: Page showing how data is bound and live
    title = "Data binding demo" 
    attr company: Company
    attr index = 0
    Block:
        block = page.content
        
        OneColRow: row1:
            Block:
                block = row1.content
                EmployeeTable: table:
                    title.text = "Company Employees"
                    company << page.company
        
        
        TwoColRow: row2:
            Block:
                block = row2.col1
                EmployeeForm:
                    title.text = "Employee"
                    employee << company.employees[table.selected] if table.selected < len(company.employees) else None 
                    
            Block:
                block = row2.col2
                HelpCard:
                    title.text = "Help"
                    
                
        
        
        